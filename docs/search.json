[{"path":"https://uconn-scs.github.io/msDiaLogue/articles/cust_vis.html","id":"volcano-plot","dir":"Articles","previous_headings":"","what":"Volcano plot","title":"Customizing msDiaLogue Visualizations","text":"","code":"## default volcano visualize(anlys_mod.t$`100pmol-50pmol`, graphType = \"volcano\",           P.thres = 0.05, F.thres = 1) #> Warning: Removed 32 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/cust_vis.html","id":"change-labels-of-proteins","dir":"Articles","previous_headings":"Volcano plot","what":"Change labels of proteins","title":"Customizing msDiaLogue Visualizations","text":"following code shown demonstrate replace default labels volcano plot gene protein names, using additional information.","code":"volcano <- visualize(anlys_mod.t$`100pmol-50pmol`, graphType = \"volcano\",                      P.thres = 0.05, F.thres = 1)  ## read a csv file containing full protein information, including gene/protein names protNames <- read.csv(\"full_protein_information.csv\")  ## change labels of proteins library(dplyr) volcano[[\"data\"]] <- volcano[[\"data\"]] %>%   ## convert the row names into a column named \"PG.ProteinNames\"   tibble::rownames_to_column(\"PG.ProteinNames\") %>%   ## merge the data with protNames based on the \"PG.ProteinNames\" column   left_join(protNames, by  = \"PG.ProteinNames\") %>%   ## change the default labels from accessions to gene/protein names   mutate(label = ifelse(is.na(label), label, PG.Genes))  volcano #> Warning: Removed 32 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/cust_vis.html","id":"change-colors","dir":"Articles","previous_headings":"Volcano plot","what":"Change colors","title":"Customizing msDiaLogue Visualizations","text":"customize colors volcano plot, can use function ggplot_build() ggplot2. allows specify custom colors different significance levels output plot.","code":"volcano <- visualize(anlys_mod.t$`100pmol-50pmol`, graphType = \"volcano\",                      P.thres = 0.05, F.thres = 1)  library(ggplot2) new <- ggplot_build(volcano) new[[\"plot\"]][[\"scales\"]][[\"scales\"]][[1]][[\"palette.cache\"]] <-   c(Down = \"purple\", Up = \"orange\", Inconclusive = \"gray\", No = \"gray20\")  new$plot #> Warning: Removed 32 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/cust_vis.html","id":"change-themes","dir":"Articles","previous_headings":"Volcano plot","what":"Change themes","title":"Customizing msDiaLogue Visualizations","text":"modify appearance volcano plot, can completely override current theme using ggplot2’s theme_*() functions. Themes control overall look plot, including background, gridlines, text.","code":"volcano <- visualize(anlys_mod.t$`100pmol-50pmol`, graphType = \"volcano\",                      P.thres = 0.05, F.thres = 1)  library(ggplot2) ## use a classic theme volcano + theme_classic() #> Warning: Removed 32 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/cust_vis.html","id":"ma-plot","dir":"Articles","previous_headings":"","what":"MA plot","title":"Customizing msDiaLogue Visualizations","text":"","code":"## default MA visualize(anlys_MA$`100pmol-50pmol`, graphType = \"MA\", M.thres = 0.5) #> Warning: Removed 22 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/cust_vis.html","id":"change-labels-of-proteins-1","dir":"Articles","previous_headings":"MA plot","what":"Change labels of proteins","title":"Customizing msDiaLogue Visualizations","text":"change labels plot accession numbers gene protein names, follow steps:","code":"ma <- visualize(anlys_MA$`100pmol-50pmol`, graphType = \"MA\", M.thres = 0.5)  ## read a csv file containing full protein information, including gene/protein names protNames <- read.csv(\"full_protein_information.csv\")  ## change labels of proteins library(dplyr) ma[[\"data\"]] <- ma[[\"data\"]] %>%   ## convert the row names into a column named \"PG.ProteinNames\"   tibble::rownames_to_column(\"PG.ProteinNames\") %>%   ## merge the data with protNames based on the \"PG.ProteinNames\" column   left_join(protNames, by  = \"PG.ProteinNames\") %>%   ## change the default labels from accessions to gene/protein names   mutate(label = ifelse(is.na(label), label, PG.Genes))  ma #> Warning: Removed 22 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/cust_vis.html","id":"change-colors-1","dir":"Articles","previous_headings":"MA plot","what":"Change colors","title":"Customizing msDiaLogue Visualizations","text":"adjust colors MA plot, can customize color scheme better highlight different categories significance. can modify colors plot:","code":"ma <- visualize(anlys_MA$`100pmol-50pmol`, graphType = \"MA\", M.thres = 0.5)  library(ggplot2) new <- ggplot_build(ma) new[[\"plot\"]][[\"scales\"]][[\"scales\"]][[1]][[\"palette.cache\"]] <-   c(Down = \"darkblue\", No = \"gray\", Up = \"orange\")  new$plot #> Warning: Removed 22 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/cust_vis.html","id":"change-themes-1","dir":"Articles","previous_headings":"MA plot","what":"Change themes","title":"Customizing msDiaLogue Visualizations","text":"alter visual style MA plot, can apply different theme using ggplot2’s theme functions.","code":"ma <- visualize(anlys_MA$`100pmol-50pmol`, graphType = \"MA\", M.thres = 0.5)  library(ggplot2)  ## use a minimal theme ma + theme_minimal() #> Warning: Removed 22 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/scaffold.html","id":"setting-quantitative-value-in-scaffold","dir":"Articles","previous_headings":"","what":"1. Setting Quantitative Value in Scaffold","title":"Instructions for Exporting Data from Scaffold for Use in msDiaLogue Analysis","text":"quantitative value must set intensity measurement count measurement. Inside Scaffold 5, Samples tab, Display Options dropdown menu top left window must set “Quantitative Value” quantitative value must defined (Experiment –> Quantitative Analysis –> Settings, Quantitative Method dropdown). PMF recommends Average Precursor Intensity value.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/scaffold.html","id":"turning-off-normalization-in-scaffold","dir":"Articles","previous_headings":"","what":"2. Turning Off Normalization in Scaffold","title":"Instructions for Exporting Data from Scaffold for Use in msDiaLogue Analysis","text":"Normalization must turned . (Experiment –> Quantitative Analysis –> Settings), make sure “Use Normalization” box unchecked. option normalize various methods msDiaLogue, stack normalizations programs.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/scaffold.html","id":"minimum-requirements-for-experiment-conditions","dir":"Articles","previous_headings":"","what":"3. Minimum Requirements for Experiment Conditions","title":"Instructions for Exporting Data from Scaffold for Use in msDiaLogue Analysis","text":"experiment must contain minimum 2 conditions, condition must minimum 3 replicates. conditions fine, replicates fine, conditions need number replicates. fewer 3 replicates condition, 1 condition, throw error msDiaLogue able process data.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/scaffold.html","id":"sample-naming-format-requirements","dir":"Articles","previous_headings":"","what":"4. Sample Naming Format Requirements","title":"Instructions for Exporting Data from Scaffold for Use in msDiaLogue Analysis","text":"samples must named following format: YYYYMMDD_initials_condition_replicate# (e.g. 20240101_JL_ctrl_1). files may already named way; please check Scaffold “Samples” tab, heading quantitative value column. sample name appear vertically. name formatted , can change going “Load Data” tab, selecting tab sample individually, right-clicking tab, choosing “Edit BioSample”, typing correct name format “Sample Name” box, clicking “Apply”.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/scaffold.html","id":"filtering-dataset-for-protein-identification","dir":"Articles","previous_headings":"","what":"5. Filtering Dataset for Protein Identification","title":"Instructions for Exporting Data from Scaffold for Use in msDiaLogue Analysis","text":"strongly recommend filter dataset hide proteins 1 peptide identified. “Samples” tab, top-menu bar, “Min # Peptides” dropdown, set 2.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/scaffold.html","id":"collapsing-protein-clusters-in-samples-tab","dir":"Articles","previous_headings":"","what":"6. Collapsing Protein Clusters in Samples Tab","title":"Instructions for Exporting Data from Scaffold for Use in msDiaLogue Analysis","text":"protein clusters must collapsed. “Samples” tab, first column (header “#”), right click numbered entries , select “Clusters”, select “Collapse ”. converts gray-shaded entries, multiple proteins inferred peptide evidence, expanded view line possible protein match cluster collapsed view first entry appearing table. msDiaLogue, first entry accession number one represented data cluster. ’re now ready export data. “Samples” tab Scaffold, right-click anywhere main data table, choose “Export” (bottom menu), “Export Excel”. Save descriptive filename make sense someone else future choose location ’ll using working directory R. report can saved .xls .csv. can now use preprocessing_scaffold script available page pick transformation step msDiaLogue script provided main Usage Template page. raw data .xls file Toy_Scaffold_Data.xls, specify fileName read raw data file R. raw data stored .RData file Toy_Scaffold_Data.RData, first load data file directly, specify dataSet function.","code":"library(msDiaLogue) ## if the raw data is in a .xls file dataSet <- preprocessing_scaffold(fileName = \"../tests/testData/Toy_Scaffold_Data.xls\",                                   zeroNA = TRUE, oneNA = TRUE) ## if the raw data is in an .Rdata file load(\"../tests/testData/Toy_Scaffold_Data.RData\") dataSet <- preprocessing_scaffold(dataSet = Toy_Scaffold_Data,                                   zeroNA = TRUE, oneNA = TRUE) #> Warning: Removed 4194 rows containing non-finite outside the scale range #> (`stat_bin()`). #> Summary of Full Data Signals: #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.      NA's  #> 7.300e+05 9.640e+06 2.250e+07 5.546e+07 5.630e+07 3.480e+09      4194  #>  #> Levels of Condition: 6 ctrl DM SIC  #> Levels of Replicate: 1 2 3"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"load-r-package","dir":"Articles","previous_headings":"","what":"Load R package","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"library(msDiaLogue)"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"usage","dir":"Articles","previous_headings":"Preprocessing","what":"Usage","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"preprocessing(   fileName,            # name of Spetronaught file   dataSet = NULL,      # name of dataset if already loaded into R   filterNaN = TRUE,    # Should NaN values be removed?   filterUnique = 2,    # Minimum number of unique peptides   replaceBlank = TRUE, # Replace blank protein names with Accession num.   saveRm = TRUE        # Should excluded proteins be saved to a file? )"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"details-examples","dir":"Articles","previous_headings":"Preprocessing","what":"Details & Examples","title":"A Usage Template for the R Package msDiaLogue","text":"function preprocessing() takes .csv file summarized protein abundances, exported Spectronaut. important columns need included file : R.Condition, R.Replicate, PG.ProteinAccessions, PG.ProteinNames, PG.NrOfStrippedSequencesIdentified, PG.Quantity. function reformat data provide functionality initial filtering (based number unique peptides). steps describe functions happen Preprocessing code. 1. Loads raw data raw data .csv file Toy_Spectronaut_Data.csv, specify fileName read raw data file R. raw data stored .RData file Toy_Spectronaut_Data.RData, first load data file directly, specify dataSet function. 2. Filters identified proteins exhibit “NaN” quantitative values NaN, stands ‘Number,’ can found PG.Quantity column proteins identified MS MS/MS evidence raw data, peptides protein lack associated integrated peak area intensity. usually occurs low abundance peptides exhibit intensities close limit detection resulting poor signal--noise (S/N) /interference co-eluting peptide ions similar identical m/z values lead difficulty parsing individual intensity profiles. 3. Applies unique peptides per protein filter General practice proteomics field filter proteins identified basis single peptide. approximately 1% identified peptides false positive matches, ’s likely 1 peptide incorrectly identified protein ID incorrect , example, 5 peptides protein incorrectly identified protein ID incorrect. recommend focusing proteins 2 peptide identifications, higher confidence. protein interest 1 peptide identified, contact PMF faculty can help evaluate evidence raw data determine believability. 4. Adds accession numbers identified proteins without informative names Spectronaut reports contain 4 different columns identifying information: PG.Genes, gene name (e.g. CDK1). PG.ProteinAccessions, UniProt identifier number unique entry online database (e.g. P06493). PG.ProteinDescriptions, protein name provided UniProt (e.g. cyclin-dependent kinase 1). PG.ProteinNames, concatenation identifier species (e.g. CDK1_HUMAN). Every entry UniProt accession number, may identifiers, due incomplete annotation. Uniprot includes entries fragments proteins proteins entries redundant, peptide can match multiple entries protein, generates multiple possible identifiers Spectronaut. , ProteinNames entry Spectronaut can switch formats: preference accession number species, can also gene name species instead. option tells msDiaLogue substitute accession number identifier tries pull identifier column information. 5. Saves document working directory filtered data, desired saveRm = TRUE, data removed step 2 (preprocess_Filtered_Out_NaN.csv) step 3 (preprocess_Filtered_Out_Unique.csv) saved current working directory. part preprocessing(), histogram log2log_2-transformed protein abundances provided. helpful way confirm data read correctly, issues numerical values protein abundances. Ideally, histogram appear fairly symmetrical (bell-shaped) without much skew towards smaller larger values.","code":"## if the raw data is in a .csv file fileName <- \"../tests/testData/Toy_Spectronaut_Data.csv\" dataSet <- preprocessing(fileName,                          filterNaN = TRUE, filterUnique = 2,                          replaceBlank = TRUE, saveRm = TRUE) ## if the raw data is in an .Rdata file load(\"../tests/testData/Toy_Spectronaut_Data.RData\") dataSet <- preprocessing(dataSet = Toy_Spectronaut_Data,                          filterNaN = TRUE, filterUnique = 2,                          replaceBlank = TRUE, saveRm = TRUE) #> Warning: Removed 62 rows containing non-finite outside the scale range #> (`stat_bin()`). #> Summary of Full Data Signals (Raw): #>      Min.   1st Qu.    Median      Mean   3rd Qu.      Max.  #>     20.93    263.87    669.79   6897.92   1963.53 117803.49 #> Levels of Condition: 100pmol 200pmol 50pmol  #> Levels of Replicate: 1 2 3 4"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"usage-1","dir":"Articles","previous_headings":"Transformation","what":"Usage","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"transform(dataSet,        # a preprocessed dataset           method = \"log\", # method of transformation           logFold = 2,    # base value for log transformation           root = 2)       # degree of the root for a root transformation"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"details-examples-1","dir":"Articles","previous_headings":"Transformation","what":"Details & Examples","title":"A Usage Template for the R Package msDiaLogue","text":"Raw mass spectrometry intensity measurements often unsuitable direct statistical modeling shape data usually symmetrical variance consistent across range intensities. proteomic workflows convert raw values log2_2 transformation, reshapes data symmetrical distribution, making easier interpret mean-based fold changes, also stabilizes variance across intensity range (.e. reduces heteroscedasticity).","code":"dataTran <- transform(dataSet, logFold = 2)"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"usage-2","dir":"Articles","previous_headings":"Filtering","what":"Usage","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"filterOutIn(   dataSet,           # dataset of values   listName = c(),    # character vector of proteins   regexName = c(),   # character vector for use within a regex   removeList = TRUE, # should named proteins be remove?   saveRm = TRUE      # should removed proteins be saved? )"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"details-examples-2","dir":"Articles","previous_headings":"Filtering","what":"Details & Examples","title":"A Usage Template for the R Package msDiaLogue","text":"cases, researcher may wish filter specific protein proteins dataset. common instance proteins identified common contaminants database, don’t want something like BSA matched human protein search algorithm didn’t correct option available, don’t actually care BSA want leave visualization. examples may filtering entries decoy database (specific Scaffold file , present Spectronaut file), mixed-species experiment researcher wants evaluate data one species time. step allows set aside specific proteins downstream analysis, using either exact match identifier (listName = argument), text-containing identifiers (regexName = argument). Case 1. Remove proteins specified user step keep everything else. example , specific protein identifier “ALBU_BOVIN” removed, anything entries identifier contains characters “HUMAN”. removeList = TRUE, function remove ’ve specified keep rest. want exclude two sets proteins specific ones (e.g. contaminants decoys, specifically albumin), can drop listName designator entirely, set regexName include combination, like : Keep mind type “CON”, many protein names CON somewhere text string, selected . contaminants database uses two underscores set identifier tag (CON__), can distinguish contaminants proteins names like “condensin” “ubiquitin-conjugating” “domain-containing”. saveRm = TRUE, filtered-data (“ALBU_BOVIN” + “*HUMAN”) saved .csv file named filtered_out_data.csv current working directory, can inspect list see removed. Case 2. Keep proteins specified user step remove everything else. set removeList FALSE, running code remove everything didn’t specify keep things matched search terms. Extension Besides protein names, function filterProtein() provides similar function filter proteins additional protein information. Spectronaut: “PG.Genes”, “PG.ProteinAccessions”, “PG.ProteinDescriptions”, “PG.ProteinNames”. Scaffold: “ProteinDescriptions”, “AccessionNumber”, “AlternateID”. proteinInformation file name protein information, automatically generated preprocessing(). case, proteins whose \"PG.ProteinDescriptions\" match “Putative zinc finger protein 840” “Bovine serum albumin” kept. Note search value text used exact equality search.","code":"filterOutIn(dataTran, listName = \"ALBU_BOVIN\", regexName = \"HUMAN\",             removeList = TRUE, saveRm = TRUE) filterOutIn(dataTran, regexName = c(\"DECOY\", \"CON__\"),             removeList = TRUE, saveRm = TRUE) filterOutIn(dataTran, listName = \"ALBU_BOVIN\", regexName = \"HUMAN\",             removeList = FALSE) filterProtein(dataTran, proteinInformation = \"preprocess_protein_information.csv\",               text = c(\"Putative zinc finger protein 840\", \"Bovine serum albumin\"),               by = \"PG.ProteinDescriptions\",               removeList = FALSE)"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"usage-3","dir":"Articles","previous_headings":"Normalization","what":"Usage","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"normalize(dataSet,                 # dataset of experimental values           applyto = \"sample\",      # specify the target of normalization           normalizeType = \"quant\", # why type of normalization to apply           plot = TRUE)             # should a plot of normalized values be produced?"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"details-examples-3","dir":"Articles","previous_headings":"Normalization","what":"Details & Examples","title":"A Usage Template for the R Package msDiaLogue","text":"Normalization designed address systematic biases data. Biases can arise inadvertent sample grouping generation preparation, variations instrument performance acquisition, analysis different peptide amounts across experiments, reasons. factors can artificially mask enhance actual biological changes. Many normalization methods developed large datasets, strengths weaknesses. following factors considered choosing normalization method: Experiment-Specific Normalization: experiments run UConn PMF normalized injection amount time analysis facilitate comparison. “Amount” measured UV absorbance 280 nm, standard method generic protein quantification. Assumption Non-Changing Species: biological experiments implicitly assume majority measured species experiment change across conditions. assumption robust measurements experiment (e.g. several thousand proteins). may true small datasets (tens proteins). analyzing batch samples different complexities (e.g. set IPs control samples tens proteins experimental samples hundreds proteins), normalize together, break subsets similar complexity. default, normalization performed across samples, adjusting protein expression levels within sample relative samples. far, package provides eight normalization methods use: “auto”: Auto scaling (mean centering dividing standard deviation variable) (Jackson 1991). “level”: Level scaling (mean centering dividing mean variable). “mean”: Mean centering. “median”: Median centering. “pareto”: Pareto scaling (mean centering dividing square root standard deviation variable). “quant”: Quantile normalization (Bolstad et al. 2003). “range”: Range scaling (mean centering dividing range variable). “vast”: Variable stability (VAST) scaling (Keun et al. 2003). Quantile normalization generally recommended UConn SCS.   message “Warning: Removed 55 rows containing non-finite values” indicates presence 55 NA (Available) values data. NA values arise protein identified particular sample condition automatically excluded generating boxplot retained actual dataset.","code":"dataNorm <- normalize(dataTran, normalizeType = \"quant\") #> Warning: Removed 55 rows containing non-finite outside the scale range #> (`stat_boxplot()`). #> Warning: Removed 55 rows containing non-finite outside the scale range #> (`stat_boxplot()`)."},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"usage-4","dir":"Articles","previous_headings":"Imputation","what":"Usage","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"dataMissing(   dataSet,                # dataset of experimental values   sort_miss = FALSE,      # should columns be ordered by missingness?   plot = FALSE,           # should missingness be plotted?   show_pct_legend = TRUE, # should % missing be displayed on plot?   show_labels = TRUE,     # should column headings be displayed on plot?   show_pct_col = TRUE     # should % missing by column be displayed on plot? )  impute.min_local(dataSet,                  # dataset of experimental values                  reportImputing = FALSE,   # should record of imputed values be kept?                  reqPercentPresent = 0.51) # what is the required % present to be imputed?  impute.min_global(dataSet,                # dataset of experimental values                   reportImputing = FALSE) # should record of imputed values be kept?  impute.knn_seq(dataSet,                # dataset of experimental values                reportImputing = FALSE, # should record of imputed values be kept?                k = 10)                 # number of neighbors for imputation"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"details-examples-4","dir":"Articles","previous_headings":"Imputation","what":"Details & Examples","title":"A Usage Template for the R Package msDiaLogue","text":"two primary MS/MS acquisition types implemented large scale MS-based proteomics unique advantages disadvantages. Traditional Data-Dependent Acquisition (DDA) methods favor specificity MS/MS sampling comprehensive proteome coverage. Small peptide isolation windows (<3 m/z) result MS/MS spectra contain fragmentation data ideally one peptide. specificity promotes clear peptide identifications comes expense added scan time. DDA experiments, number peptides can selected MS/MS limited instrument scan speeds therefore prioritized highest peptide abundance. Low abundance peptides sampled less frequently MS/MS can result variable peptide coverage many missing protein data across large sample datasets. Data-Independent Acquisition (DIA) methods promote comprehensive peptide coverage specificity sampling many peptides MS/MS simultaneously. Sequential large mass isolation windows (4-50 m/z) used isolate large numbers peptides concurrent MS/MS. produces complicated fragmentation spectra, spectra contain data every observable peptide. major disadvantage type acquisition DIA MS/MS spectra incredibly complex difficult deconvolve. Powerful relatively new software programs like Spectronaut capable successfully parsing fragment ions came co-fragmented peptide using custom libraries, machine learning algorithms, precisely determined retention times measured ion mobility data. observable ions sampled MS/MS, DIA reduces missingness substantially compared DDA, though entirely. Function dataMissing() designed summarize missingness protein, plot = TRUE indicates plotting missingness, show_labels = TRUE means protein names displayed printed plot. Note visual representation generated default, plot generation time varies project size.  percentage protein labels represents proportion missing data samples protein. instance, label “ZN840_HUMAN (8%)” indicates , within observations protein “ZN840_HUMAN”, 8% data missing. Additionally, percentage legend represents proportion missing data whole dataset. case, 10.2% data dataNorm missing. Regardless plot generation, function dataMissing() always returns table providing following information: count_miss: count missing values protein. pct_miss_col: percentage missing values protein. pct_miss_tot: percentage missing values protein relative total missing values entire dataset. example, case protein “ZN840_HUMAN,” 1 NA values samples, representing 8.33% missing data “ZN840_HUMAN” within sample 1.82% total missing data entire dataset. Various imputation methods developed address missing-value issue assign reasonable guess quantitative value proteins missing values. far, package provides 10 imputation methods use: impute.min_local(): Replaces missing values lowest measured value protein condition. impute.min_global(): Replaces missing values lowest measured value protein found within entire dataset. impute.knn(): Replaces missing values using k-nearest neighbors algorithm (Troyanskaya et al. 2001). impute.knn_seq(): Replaces missing values using sequential k-nearest neighbors algorithm (Kim, Kim, Yi 2004). impute.knn_trunc(): Replaces missing values using truncated k-nearest neighbors algorithm (Shah et al. 2017). impute.nuc_norm(): Replaces missing values using nuclear-norm regularization (Hastie et al. 2015). impute.mice_cart(): Replaces missing values using classification regression trees (Breiman et al. 1984; Doove, van Buuren, Dusseldorp 2014; van Buuren 2018). impute.mice_norm(): Replaces missing values using Bayesian linear regression (Rubin 1987; Schafer 1997; van Buuren Groothuis-Oudshoorn 2011). impute.pca_bayes(): Replaces missing values using Bayesian principal components analysis (Oba et al. 2003). impute.pca_prob(): Replaces missing values using probabilistic principal components analysis (Stacklies et al. 2007). Additional methods added later. example, impute NA value dataNorm using impute.min_local(), set required percentage values must present given protein condition combination values imputed 51%. reportImputing = TRUE, returned result structure altered list, adding shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. imputation, entries pass percent present threshold still NA values need filtered . saveRm = TRUE indicates filtered data saved .csv file named filtered_NA_data.csv current working directory. dataImput follows:","code":"dataMissing <- dataMissing(dataNorm, plot = TRUE, show_labels = TRUE) dataImput <- impute.min_local(dataNorm, reportImputing = FALSE,                               reqPercentPresent = 0.51) dataImput <- filterNA(dataImput, saveRm = TRUE)"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"usage-5","dir":"Articles","previous_headings":"Summarization","what":"Usage","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"summarize(dataSet,         # dataset of experimental values           saveSumm = TRUE) # dsave table of summary statistics?"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"details-examples-5","dir":"Articles","previous_headings":"Summarization","what":"Details & Examples","title":"A Usage Template for the R Package msDiaLogue","text":"summarization provides table values protein final dataset include final processed abundances fold changes condition, protein’s statistical relation global dataset terms mean, median, standard deviation, parameters. column “Stat” generated result includes following statistics: n: Number. mean: Mean. sd: Standard deviation. median: Median. trimmed: Trimmed mean trim 0.1. mad: Median absolute deviation (median). min: Minimum. max: Maximum. range: difference maximum minimum value. skew: Skewness. kurtosis: Kurtosis. se: Standard error.","code":"dataSumm <- summarize(dataImput, saveSumm = TRUE)"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"usage-6","dir":"Articles","previous_headings":"Analysis","what":"Usage","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"analyze(dataSet,                # dataset of experimental values         method = \"t-test\",      # statistical analysis to use         ref = NULL,             # which level of condition to use as reference (for *-test, MA)         adjust.method = \"none\", # what methods of p-value adjustment to use (for *-test)         paired = FALSE,         # are the data paired (for t-test and wilcox-test)?         pool.sd = FALSE,        # used pooled sd (for t-test)?         center = TRUE,          # should data be centered before PCA?         scale = TRUE)           # should data be scaled before PCA?"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"details-examples-6","dir":"Articles","previous_headings":"Analysis","what":"Details & Examples","title":"A Usage Template for the R Package msDiaLogue","text":"function analyze() calculates results can used subsequent visualizations.","code":"ref <- \"50pmol\""},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"students-t-test","dir":"Articles","previous_headings":"Analysis","what":"Student’s t-test","title":"A Usage Template for the R Package msDiaLogue","text":"Student’s t-test used compare means two conditions protein, reporting difference means conditions p-value test. argument adjust.method used specify testing correction procedure applied p-values. adjustment common DNA RNA-Seq analyses, datasets large researchers interested controlling Type error rate conducting multiple comparisons. However, mass spectrometry-based proteomics results, dataset sizes smaller sequencing analyses, testing corrections can harsh threshold apply. often, applying testing correction proteomics data results zero significant changes. mean nothing meaningfully changing dataset. mean corrections usually useful tool finding biologically-relevant changes dataset. Also keep mind reducing Type error typically comes cost increasing Type II error, vice versa. way eliminate error; researcher must decide whether comfortable losing true results along false ones, keeping false results along true ones, choose analysis strategies accordingly. UConn PMF recommends applying testing corrections proteomics dataset, like explore effects , several methods provided : “BH” alias “fdr”: Benjamini Hochberg (1995). “”: Benjamini Yekutieli (2001). “bonferroni”: Bonferroni (1936). “hochberg”: Hochberg (1988). “holm”: Holm (1979). “hommel”: Hommel (1988). method offers balance statistical power error control. default value \"none\" indicates correction applied.","code":"anlys_t <- analyze(dataImput, ref = ref,                    method = \"t-test\", adjust.method = \"none\") #> Data are essentially constant. #> Data are essentially constant. #> $`100pmol-50pmol` #> $`200pmol-50pmol` #> $total"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"empirical-bayes-moderated-t-test","dir":"Articles","previous_headings":"Analysis","what":"Empirical Bayes moderated t-test","title":"A Usage Template for the R Package msDiaLogue","text":"main distinction Student’s empirical Bayes moderated t-tests (Smyth 2004) lies variance computed. Student’s t-test calculates variance based data available protein individually, moderated t-test utilizes information proteins current dataset calculate variance.","code":"anlys_mod.t <- analyze(dataImput, ref = ref,                        method = \"mod.t-test\", adjust.method = \"none\") #> Warning: Zero sample variances detected, have been offset away from zero #> $`100pmol-50pmol` #> $`200pmol-50pmol` #> $total"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"wilcoxon-test","dir":"Articles","previous_headings":"Analysis","what":"Wilcoxon test","title":"A Usage Template for the R Package msDiaLogue","text":"Wilcoxon test non-parametric alternative two-sample t-test. paired = TRUE, Wilcoxon signed-rank test performed test null hypothesis distribution difference two conditions protein symmetric zero. paired = FALSE, Wilcoxon rank-sum test (also known Mann-Whitney test) performed test null hypothesis distribution two conditions protein .","code":"anlys_wilcox <- analyze(dataImput, ref = ref,                         method = \"wilcox-test\", adjust.method = \"none\") #> $`100pmol-50pmol` #> $`200pmol-50pmol` #> $total"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"ma","dir":"Articles","previous_headings":"Analysis","what":"MA","title":"A Usage Template for the R Package msDiaLogue","text":"result method = \"MA\" generate data plotting MA plot, represents protein-wise averages within condition.","code":"anlys_MA <- analyze(dataImput, ref = ref, method = \"MA\") #> $`100pmol-50pmol` #> $`200pmol-50pmol`"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"pca","dir":"Articles","previous_headings":"Analysis","what":"PCA","title":"A Usage Template for the R Package msDiaLogue","text":"Principal component analysis (PCA) powerful technique used data analysis simplify reduce dimensionality large datasets. transforms original variables uncorrelated components capture maximum variance. selecting subset components, PCA projects data points onto key directions, enabling visualization analysis lower-dimensional space. aids identifying patterns relationships within complex datasets. PCA, arguments center scale used center data zero mean scale unit variance, default setting TRUE. case dataImput, one protein, namely “ALBU_BOVIN”, constant values, leading error message. choose remove protein PCA.","code":"names(dataImput)[sapply(dataImput, function(col) length(unique(col)) == 1)] #> [1] \"ALBU_BOVIN\" dataPCA <- dataImput[, colnames(dataImput) != \"ALBU_BOVIN\"] anlys_PCA <- analyze(dataPCA, method = \"PCA\", center = TRUE, scale = TRUE) #> Standard deviations (1, .., p=12): #>  [1] 3.581885e+00 2.285701e+00 2.092323e+00 1.907073e+00 1.649030e+00 #>  [6] 1.513033e+00 1.352933e+00 1.210993e+00 1.042803e+00 9.208106e-01 #> [11] 8.307195e-01 2.172933e-14 #> Rotation (n x k) = (37 x 12):"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"A Usage Template for the R Package msDiaLogue","text":"wide variety plotting options msDiaLogue. plots possible depend data analyses run. See details individual plot types. List plot options: Heatmaps PCA Plots Venn Diagrams Upset Plots Volcano Plots MA Plots","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"usage-7","dir":"Articles","previous_headings":"Visualization","what":"Usage","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"visualize(   dataSet,                                                   # dataset of experimental values   graphType = \"volcano\",                                     # type of image to produce   pkg = \"pheatmap\",                                          # pkg option for heatmap plotting   cluster_cols = TRUE,                                       # cluster heatmap by columns?   cluster_rows = FALSE,                                      # cluster heatmap by rows?   show_colnames = TRUE,                                      # display heatmap columns?   show_rownames = TRUE,                                      # display heatmap rows?   M.thres = 1,                                               # threshold by foldchange   addlabels = TRUE,                                          # should labels be added to PCA plots?   choice = \"variance\",                                       # type of scree plot to generate   ncp = 10,                                                  # number of PCs to estimate   addEllipses = TRUE,                                        # should ellipses be added?   ellipse.level = 0.95,                                      # level for ellipses   label = \"all\",                                             # what to label in PCA plot   show_percentage = TRUE,                                    # should % be shown in Venn diagram   fill_color = c(\"blue\", \"yellow\", \"green\", \"red\"),          # colors to uses for Venn diagram   saveVenn = TRUE,                                           # should Venn diagram be exported?   proteinInformation = \"preprocess_protein_information.csv\", # name of file containing protein information   P.thres = 0.05,                                            # significance level for volcano plots   F.thres = 1)                                               # fold change threshold for volcano plots"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"details-examples-7","dir":"Articles","previous_headings":"Visualization","what":"Details & Examples","title":"A Usage Template for the R Package msDiaLogue","text":"section provides variety options getting global view data, making comparisons, highlighting trends.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"heatmap","dir":"Articles","previous_headings":"Visualization","what":"heatmap","title":"A Usage Template for the R Package msDiaLogue","text":"package offers two options plotting heatmap. Option 1 utilizes source package pheatmap, capable plotting dendrogram simultaneously. default choice heatmaps package.  protein names excessively long, recommended set show_rownames = FALSE view full heatmap. Option 2 use source package ggplot2 generate ggplot object include dendrogram.  heatmap, similar colors within row indicate relatively consistent values, suggesting similar protein expression levels across different samples.","code":"visualize(dataImput, graphType = \"heatmap\",           pkg = \"pheatmap\",           cluster_cols = TRUE, cluster_rows = TRUE,           show_colnames = TRUE, show_rownames = TRUE) visualize(dataImput, graphType = \"heatmap\", pkg = \"ggplot2\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"ma-1","dir":"Articles","previous_headings":"Visualization","what":"MA","title":"A Usage Template for the R Package msDiaLogue","text":"MA plot visualizes differences measurements taken two samples, transforming data onto M (log ratio fold change) (mean average) scales. MA plot puts variable M y-axis x-axis gives quick overview distribution data. proteins expected show little variation, majority points concentrated around M = 0 line (difference group means). Typically, points falling abs(1)abs(1) highlighted. MA plot, short “M vs. plot,” uses two axes: M axis (vertical): Represents fold change, usually logarithm base 2 scale, ratio expression levels, two conditions. calculated : M=log2(X/Y)=log2X−log2YM = log_2(X/Y) = log_2 X - log_2 Y axis (horizontal): Represents average intensity two conditions, calculated : =12log2(XY)=12[log2(X)+log2(Y)]= \\frac{1}{2}log_2(XY) = \\frac{1}{2}\\left[log_2(X)+log_2(Y)\\right] proteins expected exhibit little variation, leading majority points concentrating around line M = 0 (indicating difference group means).  M.thres = 1 means M thresholds set −1 1. scatters split three parts: significant (M > 1), significant (-1 ≤\\leq M ≤\\leq 1), significant (M < -1). Additionally, warning message “Removed 32 rows containing missing values” indicates 32 proteins significance.","code":"visualize(anlys_MA$`100pmol-50pmol`, graphType = \"MA\", M.thres = 1) #> Warning: Removed 32 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"normalize","dir":"Articles","previous_headings":"Visualization","what":"Normalize","title":"A Usage Template for the R Package msDiaLogue","text":"","code":"visualize(dataNorm, graphType = \"normalize\") #> Warning: Removed 55 rows containing non-finite outside the scale range #> (`stat_boxplot()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"pca_scree","dir":"Articles","previous_headings":"Visualization","what":"PCA_scree","title":"A Usage Template for the R Package msDiaLogue","text":"One way help identify many PCs retain, explore scree plot. scree plot shows eigenvalues PC, represent proportion variance explained component. choice specifies data plotted, either \"variance\" \"eigenvalue\", addlabels = TRUE adds information labels top bars/points, ncp = 10 sets number dimension displayed.","code":"visualize(anlys_PCA, graphType = \"PCA_scree\",           addlabels = TRUE, choice = \"variance\", ncp = 10) visualize(anlys_PCA, graphType = \"PCA_scree\",           addlabels = TRUE, choice = \"eigenvalue\", ncp = 10)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"pca_ind","dir":"Articles","previous_headings":"Visualization","what":"PCA_ind","title":"A Usage Template for the R Package msDiaLogue","text":"primary PCA plot individual data visually represents distribution individual observations reduced-dimensional space, typically defined PCs. x y axes PCA plot represent PCs. axis corresponds linear combination original variables. Individual data points PCA plot represent observations (e.g., samples) original dataset. Points close origin (0, 0), close “average” across protein abundances. sufficient samples present, plot also produce 95% confidence ellipse, well centroid (mean group provided), groups (condition) provided.","code":"visualize(anlys_PCA, graphType = \"PCA_ind\",           addlabels = TRUE, addEllipses = TRUE, ellipse.level = 0.95)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"pca_var","dir":"Articles","previous_headings":"Visualization","what":"PCA_var","title":"A Usage Template for the R Package msDiaLogue","text":"plot useful analyses based relatively small number proteins. represents association, loading protein first two PCs. Longer arrows represents stronger associations.","code":"visualize(anlys_PCA, graphType = \"PCA_var\", addlabels = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"pca_biplot","dir":"Articles","previous_headings":"Visualization","what":"PCA_biplot","title":"A Usage Template for the R Package msDiaLogue","text":"PCA biplot includes individual variable plots. , large number proteins, plot can unwieldy.","code":"visualize(anlys_PCA, graphType = \"PCA_biplot\",           addEllipses = TRUE, ellipse.level = 0.95, label = \"all\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"t-test","dir":"Articles","previous_headings":"Visualization","what":"t-test","title":"A Usage Template for the R Package msDiaLogue","text":"function visualize() can applied t-test output. generates two useful plots: histogram fold changes across analyzed proteins histogram p-values. majority proteins expected show small change conditions, fold change histogram peak around zero. p-values, p-values expected non-significant (0.05). Depending strength treatment effect, may peak p-values near 0.","code":"visualize(anlys_mod.t$`100pmol-50pmol`, graphType = \"t-test\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"upset","dir":"Articles","previous_headings":"Visualization","what":"Upset","title":"A Usage Template for the R Package msDiaLogue","text":"upset plot visual representation helps display overlap intersection sets categories dataset. particularly useful illustrating presence absence elements combinations sets.  plot reveals 42 proteins shared 50pmol, 100pmol, 200pmol, 3 proteins shared 100 pmol 200pmol, 50pmol.","code":"dataSort <- sortcondition(dataSet) visualize(dataSort, graphType = \"Upset\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"venn","dir":"Articles","previous_headings":"Visualization","what":"Venn","title":"A Usage Template for the R Package msDiaLogue","text":"Venn plot another graphical representation relationships sets. circle represents set, overlapping regions show elements shared sets.  saveVenn = TRUE refers data containing logical columns representing sets Venn plot information saved .csv file named Venn_information.csv current working directory. example , 50pmol, 100pmol, 200pmol groups share 42 proteins. Notably, 3 proteins exclusively found 100pmol 200pmol groups.","code":"visualize(dataSort, graphType = \"Venn\",           show_percentage = TRUE,           fill_color = c(\"blue\", \"yellow\", \"green\", \"red\"),           saveVenn = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"volcano","dir":"Articles","previous_headings":"Visualization","what":"Volcano","title":"A Usage Template for the R Package msDiaLogue","text":"volcano plot graphical representation commonly used proteomics genomics visualize differential expression analysis results. particularly useful identifying significant changes extensive data. displays two important pieces information differences conditions dataset: Statistical significance (vertical): Represents negative log10 p-value. Fold change (horizontal): Represents fold change.","code":"visualize(anlys_mod.t$`100pmol-50pmol`, graphType = \"volcano\",           P.thres = 0.05, F.thres = 0.6) #> Warning: Removed 29 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://uconn-scs.github.io/msDiaLogue/articles/usage_template.html","id":"other-useful-function","dir":"Articles","previous_headings":"","what":"Other useful function","title":"A Usage Template for the R Package msDiaLogue","text":"function pullProteinPath() allows see quantitative values associated specific proteins step processing, using either exact match argument listname =, text match argument regexName =, . can useful questions , “values favorite protein actually measured, vs. imputed?” “didn’t favorite protein make final list? step filtered ?”. can also used check whether fold-change observed specific protein artifact one processing steps.","code":"Check <- pullProteinPath(   listName = c(\"LYSC_CHICK\", \"BGAL_ECOLI\"),   regexName = c(\"BOVIN\"),   by = \"PG.ProteinNames\",   dataSetList = list(Initial = dataSet,                      Transformed = dataTran,                      Normalized = dataNorm,                      Imputed = dataImput))"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shiying Xiao. Author, maintainer. Timothy Moore. Author. Charles Watt. Author, contributor.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Xiao S, Moore T, Watt C (2025). msDiaLogue: Analysis + Visuals Data Indep. Aquisition Mass Spectrometry Data. R package version 0.0.5, https://github.com/uconn-scs/msDiaLogue.","code":"@Manual{,   title = {msDiaLogue: Analysis + Visuals for Data Indep. Aquisition Mass Spectrometry Data},   author = {Shiying Xiao and Timothy Moore and Charles Watt},   year = {2025},   note = {R package version 0.0.5},   url = {https://github.com/uconn-scs/msDiaLogue}, }"},{"path":[]},{"path":"https://uconn-scs.github.io/msDiaLogue/index.html","id":"code-building-for-workflow-package","dir":"","previous_headings":"","what":"Code building for workflow package","title":"msDiaLogue","text":"repository used build customized UConn PMF-SCS workflow Data-Independent Acquisition (DIA) proteomics data. code expanded include options users, detailed explanations steps analysis process.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"msDiaLogue","text":"can install development version msDiaLogue GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"uconn-scs/msDiaLogue\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/index.html","id":"main-areas-include","dir":"","previous_headings":"","what":"Main areas include","title":"msDiaLogue","text":"Data preprocessing: getting data Spectronaut Data transformation: options transforming abundance data Data filtering: providing options filter data based preset levels Data normalization: normalization procedures Data imputation: missing data procedures Data summary: calculating presenting numerical summaries tabular form Differential Abundance Analysis: statistical tools DIA data analysis Data visualization: providing clean visuals aid data analysis decisions","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/index.html","id":"general-problems-during-installation","dir":"","previous_headings":"","what":"General problems during installation","title":"msDiaLogue","text":"WARNING: Rtools required build R packages currently installed. Windows, RTools required build package. sh: /opt/gfortran/bin/gfortran: file directory GFortran compiler required build package. dependency 'impute' available dependent packages—impute, limma, pcaMethods—available via Bioconductor rather CRAN. get error message packages, simply install using:","code":"install.packages(\"BiocManager\") BiocManager::install(\"impute\") BiocManager::install(\"limma\") BiocManager::install(\"pcaMethods\")"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/analyze.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyzing summarized data — analyze","title":"Analyzing summarized data — analyze","text":"Apply statistical test data.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/analyze.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyzing summarized data — analyze","text":"","code":"analyze(   dataSet,   method = \"t-test\",   ref = NULL,   adjust.method = \"none\",   paired = FALSE,   pool.sd = FALSE,   center = TRUE,   scale = TRUE )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/analyze.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyzing summarized data — analyze","text":"dataSet 2d data set data. method string (default = \"t-test\") specifying statistical analysis use: \"t-test\": Student's t-test. \"mod.t-test\": Empirical Bayes moderated t-test (Smyth 2004) . \"wilcox-test\": Wilcoxon test. \"MA\": Output plot MA plot. \"PCA\": Principal components analysis (Pearson 1901; Hotelling 1933) . ref string (default = NULL) specifying reference condition comparison. NULL, pairwise comparisons performed. adjust.method string (default = \"none\") specifying correction method p-value adjustment method = \"*-test\": \"BH\" alias \"fdr\": Benjamini Hochberg (1995) . \"\": Benjamini Yekutieli (2001) . \"bonferroni\": Bonferroni (1936) . \"hochberg\": Hochberg (1988) . \"holm\": Holm (1979) . \"hommel\": Hommel (1988) . \"none\": None See p.adjust details. paired boolean (default = FALSE) specifying whether perform paired test method = \"t-test\" method = \"wilcox-test\". pool.sd boolean (default = FALSE) specifying whether use pooled standard deviation method = \"t-test\". center boolean (default = TRUE) indicating whether variables shifted zero centered method = \"PCA\". scale boolean (default = TRUE) indicating whether variables scaled unit variance analysis takes place method = \"PCA\".","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/analyze.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyzing summarized data — analyze","text":"\"t-test\", \"mod.t-test\", \"wilcox-test\": list comprising data frames comparison, data frame containing means two compared conditions protein, difference means, p-values. Additionally, separate data frame called \"total\" summarizes results multiple comparisons. \"MA\": list comprising data frames comparison, data frame containing means two compared conditions protein, well average difference means. \"PCA\": list containing standard deviations principal components sdev, matrix variable loadings rotation, centering used center, scaling used scale, principal component scores x.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/analyze.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analyzing summarized data — analyze","text":"Benjamini Y, Hochberg Y (1995). “Controlling False Discovery Rate: Practical Powerful Approach Multiple Testing.” Journal Royal Statistical Society: Series B (Methodological), 57(1), 289–300. doi:10.1111/j.2517-6161.1995.tb02031.x . Benjamini Y, Yekutieli D (2001). “Control False Discovery Rate Multiple Testing Dependency.” Annals Statistics, 29(4), 1165–1188. doi:10.1214/aos/1013699998 . Bonferroni CE (1936). “Teoria Statistica Delle Classi e Calcolo Delle Probabilità.” Pubblicazioni del R Istituto Superiore di Scienze Economiche e Commerciali di Firenze, 8, 3–62. Hochberg Y (1988). “Sharper Bonferroni Procedure Multiple Tests Significance.” Biometrika, 75(4), 800–802. doi:10.1093/biomet/75.4.800 . Holm S (1979). “Simple Sequentially Rejective Multiple Test Procedure.” Scandinavian Journal Statistics, 6(2), 65–70. https://www.jstor.org/stable/4615733. Hommel G (1988). “Stagewise Rejective Multiple Test Procedure Based Modified Bonferroni Test.” Biometrika, 75(2), 383–386. doi:10.1093/biomet/75.2.383 . Hotelling H (1933). “Analysis Complex Statistical Variables Principal Components.” Journal Educational Psychology, 24(6), 417–441. doi:10.1037/h0071325 . Pearson K (1901). “Lines Planes Closest Fit Systems Points Space.” London, Edinburgh, Dublin Philosophical Magazine Journal Science, 2(11), 559–572. doi:10.1080/14786440109462720 . Smyth GK (2004). “Linear Models Empirical Bayes Methods Assessing Differential Expression Microarray Experiments.” Statistical Applications Genetics Molecular Biology, 3(1). doi:10.2202/1544-6115.1027 .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/dataMissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Counting missing data — dataMissing","title":"Counting missing data — dataMissing","text":"Calculate plot missingness.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/dataMissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counting missing data — dataMissing","text":"","code":"dataMissing(   dataSet,   sort_miss = FALSE,   plot = FALSE,   show_pct_legend = TRUE,   show_labels = TRUE,   show_pct_col = TRUE )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/dataMissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counting missing data — dataMissing","text":"dataSet 2d data set experimental values. sort_miss boolean (default = FALSE) specifying whether arrange columns order missingness. plot boolean (default = FALSE) specifying whether plot missingness. show_pct_legend boolean (default = TRUE) specifying whether percentages missing present values entire dataset shown legend visualization plot = TRUE. show_labels boolean (default = TRUE) specifying whether protein names shown visualization plot = TRUE. show_pct_col boolean (default = TRUE) specifying whether percentages missing data samples protein shown labels visualization show_labels = TRUE.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/dataMissing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counting missing data — dataMissing","text":"2d dataframe including: \"count_miss\": count missing values protein. \"pct_miss_col\": percentage missing values protein. \"pct_miss_tot\": percentage missing values protein relative total missing values entire dataset.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering NA's post-imputation — filterNA","title":"Filtering NA's post-imputation — filterNA","text":"Remove proteins NA values.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering NA's post-imputation — filterNA","text":"","code":"filterNA(dataSet, saveRm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering NA's post-imputation — filterNA","text":"dataSet 2d data set experimental values. saveRm boolean (default = TRUE) specifying whether save removed data current working directory.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering NA's post-imputation — filterNA","text":"filtered 2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterNA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filtering NA's post-imputation — filterNA","text":"proteins meet imputation requirement removed, .csv file created removed data.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterOutIn.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering proteins or contaminants — filterOutIn","title":"Filtering proteins or contaminants — filterOutIn","text":"Apply series filtering steps data set.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterOutIn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering proteins or contaminants — filterOutIn","text":"","code":"filterOutIn(   dataSet,   listName = c(),   regexName = c(),   removeList = TRUE,   saveRm = TRUE )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterOutIn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering proteins or contaminants — filterOutIn","text":"dataSet 2d data set experimental values. listName character vector proteins select remove. regexName character vector specifying proteins regular expression pattern matching select remove. removeList boolean (default = TRUE) specifying whether list proteins removed selected. TRUE: Remove list proteins data set. FALSE: Remove proteins list data set. saveRm boolean (default = TRUE) specifying whether save removed data current working directory. option works removeList = TRUE.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterOutIn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering proteins or contaminants — filterOutIn","text":"filtered 2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterOutIn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filtering proteins or contaminants — filterOutIn","text":"listName regexName provided, protein names selected removed union specified listName matching regex pattern regexName.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterProtein.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter proteins by gene, accession or description — filterProtein","title":"Filter proteins by gene, accession or description — filterProtein","text":"Filter preprocessed dataset gene, accession, description.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterProtein.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter proteins by gene, accession or description — filterProtein","text":"","code":"filterProtein(   dataSet,   proteinInformation = \"preprocess_protein_information.csv\",   text = c(),   by = c(\"PG.Genes\", \"PG.ProteinAccessions\", \"PG.ProteinDescriptions\", \"PG.ProteinNames\",     \"ProteinDescriptions\", \"AccessionNumber\", \"AlternateID\"),   removeList = TRUE,   saveRm = TRUE )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterProtein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter proteins by gene, accession or description — filterProtein","text":"dataSet 2d data set experimental values. proteinInformation name .csv file containing protein information data (including path file, needed). file include following columns: Spectronaut: \"PG.Genes\", \"PG.ProteinAccessions\", \"PG.ProteinDescriptions\", \"PG.ProteinNames\". Scaffold: \"ProteinDescriptions\", \"AccessionNumber\", \"AlternateID\". file automatically generated function preprocessing preprocessing_scaffold. text character vector text used key selecting removing. character string specifying information text filter applied, allowable options: Spectronaut: \"PG.Genes\", \"PG.ProteinAccessions\", \"PG.ProteinDescriptions\", \"PG.ProteinNames\". Scaffold: \"ProteinDescriptions\", \"AccessionNumber\", \"AlternateID\". removeList boolean (default = TRUE) specifying whether list proteins removed selected. TRUE: Remove list proteins data set. FALSE: Remove proteins list data set. saveRm boolean (default = TRUE) specifying whether save removed data current working directory. option works removeList = TRUE.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterProtein.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter proteins by gene, accession or description — filterProtein","text":"filtered 2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/filterProtein.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter proteins by gene, accession or description — filterProtein","text":"function extension function preprocessing preprocessing_scaffold allows filtering proteins based additional information.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the k-nearest neighbors algorithm — impute.knn","title":"Imputation by the k-nearest neighbors algorithm — impute.knn","text":"Apply imputation dataset k-nearest neighbors algorithm (Troyanskaya et al. 2001) .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the k-nearest neighbors algorithm — impute.knn","text":"","code":"impute.knn(   dataSet,   reportImputing = FALSE,   k = 10,   rowmax = 0.5,   colmax = 0.8,   maxp = 1500,   seed = 362436069 )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the k-nearest neighbors algorithm — impute.knn","text":"dataSet 2d dataset experimental values. reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure. k integer (default = 10) indicating number neighbors used imputation. rowmax scalar (default = 0.5) specifying maximum percent missing data allowed row. rows rowmax*100% missing imputed using overall mean per sample. colmax scalar (default = 0.8) specifying maximum percent missing data allowed column. column colmax*100% missing data, program halts reports error. maxp integer (default = 1500) indicating largest block proteins imputed using k-nearest neighbors algorithm. Larger blocks divided two-means clustering (recursively) prior imputation. seed integer (default = 362436069) specifying seed used random number generator reproducibility.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the k-nearest neighbors algorithm — impute.knn","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by the k-nearest neighbors algorithm — impute.knn","text":"Troyanskaya O, Cantor M, Sherlock G, Brown P, Hastie T, Tibshirani R, Botstein D, Altman RB (2001). “Missing Value Estimation Methods DNA Microarrays.” Bioinformatics, 17(6), 520–525. doi:10.1093/bioinformatics/17.6.520 .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","title":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","text":"Apply imputation dataset sequential k-nearest neighbors algorithm (Kim et al. 2004) .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","text":"","code":"impute.knn_seq(dataSet, reportImputing = FALSE, k = 10)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","text":"dataSet 2d dataset experimental values. reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure. k integer (default = 10) indicating number neighbors used imputation.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn_seq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by the k-nearest neighbors algorithm — impute.knn_seq","text":"Kim K, Kim B, Yi G (2004). “Reuse Imputed Data Microarray Analysis Increases Imputation Efficiency.” BMC bioinformatics, 5, 160. doi:10.1186/1471-2105-5-160 .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn_trunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","title":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","text":"Apply imputation dataset truncated k-nearest neighbors algorithm (Shah et al. 2017) .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn_trunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","text":"","code":"impute.knn_trunc(dataSet, reportImputing = FALSE, k = 10)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn_trunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","text":"dataSet 2d dataset experimental values. reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure. k integer (default = 10) indicating number neighbors used imputation.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn_trunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.knn_trunc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by the truncated k-nearest neighbors algorithm — impute.knn_trunc","text":"Shah JS, Rai SN, DeFilippis AP, Hill BG, Bhatnagar , Brock GN (2017). “Distribution Based Nearest Neighbor Imputation Truncated High Dimensional Data Applications Pre-Clinical Clinical Metabolomics Studies.” BMC bioinformatics, 18, 114. doi:10.1186/s12859-017-1547-6 .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.mice_cart.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by classification and regression trees — impute.mice_cart","title":"Imputation by classification and regression trees — impute.mice_cart","text":"Apply imputation dataset classification regression trees (Breiman et al. 1984; Doove et al. 2014; van Buuren 2018) .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.mice_cart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by classification and regression trees — impute.mice_cart","text":"","code":"impute.mice_cart(dataSet, reportImputing = FALSE, m = 5, seed = 362436069)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.mice_cart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by classification and regression trees — impute.mice_cart","text":"dataSet 2d dataset experimental values. reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure. m integer (default = 5) specifying number multiple imputations. seed integer (default = 362436069) specifying seed used random number generator reproducibility.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.mice_cart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by classification and regression trees — impute.mice_cart","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.mice_cart.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by classification and regression trees — impute.mice_cart","text":"Breiman L, Friedman J, Olshen RA, Stone CJ (1984). Classification Regression Trees. Routledge, New York, NY, USA. ISBN 9780412048418. Doove LL, van Buuren S, Dusseldorp E (2014). “Recursive Partitioning Missing Data Imputation Presence Interaction Effects.” Computational Statistics & Data Analysis, 72, 92–104. doi:10.1016/j.csda.2013.10.025 . van Buuren S (2018). Flexible Imputation Missing Data. Chapman \\& Hall/CRC, New York, NY, USA. ISBN 9781032178639.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.mice_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by Bayesian linear regression — impute.mice_norm","title":"Imputation by Bayesian linear regression — impute.mice_norm","text":"Apply imputation dataset Bayesian linear regression (Rubin 1987; Schafer 1997; van Buuren Groothuis-Oudshoorn 2011) .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.mice_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by Bayesian linear regression — impute.mice_norm","text":"","code":"impute.mice_norm(dataSet, reportImputing = FALSE, m = 5, seed = 362436069)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.mice_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by Bayesian linear regression — impute.mice_norm","text":"dataSet 2d dataset experimental values. reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure. m integer (default = 5) specifying number multiple imputations. seed integer (default = 362436069) specifying seed used random number generator reproducibility.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.mice_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by Bayesian linear regression — impute.mice_norm","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.mice_norm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by Bayesian linear regression — impute.mice_norm","text":"Rubin DB (1987). Multiple Imputation Nonresponse Surveys. John Wiley \\& Sons, New York, NY, USA. ISBN 9780471087052. Schafer JL (1997). Analysis Incomplete Multivariate Data. Chapman \\& Hall/CRC, New York, NY, USA. ISBN 9780412040610. van Buuren S, Groothuis-Oudshoorn K (2011). “mice: Multivariate Imputation Chained Equations R.” Journal Statistical Software, 45(3), 1–67. doi:10.18637/jss.v045.i03 .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.min_global.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the global minimum — impute.min_global","title":"Imputation by the global minimum — impute.min_global","text":"Apply imputation dataset minimum measured value protein found within entire dataset.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.min_global.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the global minimum — impute.min_global","text":"","code":"impute.min_global(dataSet, reportImputing = FALSE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.min_global.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the global minimum — impute.min_global","text":"dataSet 2d dataset experimental values. reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.min_global.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the global minimum — impute.min_global","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.min_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the local minimum — impute.min_local","title":"Imputation by the local minimum — impute.min_local","text":"Apply imputation dataset minimum measured value protein condition.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.min_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the local minimum — impute.min_local","text":"","code":"impute.min_local(dataSet, reportImputing = FALSE, reqPercentPresent = 0.51)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.min_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the local minimum — impute.min_local","text":"dataSet 2d dataset experimental values. reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure. reqPercentPresent scalar (default = 0.51) specifying required percent values must present given protein condition combination values imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.min_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the local minimum — impute.min_local","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.nuc_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by the nuclear-norm regularization — impute.nuc_norm","title":"Imputation by the nuclear-norm regularization — impute.nuc_norm","text":"Apply imputation dataset nuclear-norm regularization (Hastie et al. 2015) .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.nuc_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by the nuclear-norm regularization — impute.nuc_norm","text":"","code":"impute.nuc_norm(   dataSet,   reportImputing = FALSE,   rank.max = NULL,   lambda = NULL,   thresh = 1e-05,   maxit = 100,   final.svd = TRUE,   seed = 362436069 )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.nuc_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by the nuclear-norm regularization — impute.nuc_norm","text":"dataSet 2d dataset experimental values. reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure. rank.max integer specifying restriction rank solution. default set one less minimum dimension dataset. lambda scalar specifying nuclear-norm regularization parameter. lambda = 0, algorithm convergence typically slower. default set maximum singular value obtained singular value decomposition (SVD) dataset. thresh scalar (default = 1e-5) specifying convergence threshold, measured relative change Frobenius norm two successive estimates. maxit integer (default = 100) specifying maximum number iterations convergence reached. final.svd boolean (default = TRUE) specifying whether perform one-step unregularized iteration final iteration, followed soft-thresholding singular values, resulting hard zeros. seed integer (default = 362436069) specifying seed used random number generator reproducibility.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.nuc_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by the nuclear-norm regularization — impute.nuc_norm","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.nuc_norm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by the nuclear-norm regularization — impute.nuc_norm","text":"Hastie T, Mazumder R, Lee JD, Zadeh R (2015). “Matrix Completion Low-Rank SVD via Fast Alternating Least Squares.” Journal Machine Learning Research, 16(104), 3367—3402. http://jmlr.org/papers/v16/hastie15a.html.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.pca_bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by Bayesian principal components analysis — impute.pca_bayes","title":"Imputation by Bayesian principal components analysis — impute.pca_bayes","text":"Apply imputation dataset Bayesian principal components analysis (Oba et al. 2003) .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.pca_bayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by Bayesian principal components analysis — impute.pca_bayes","text":"","code":"impute.pca_bayes(dataSet, reportImputing = FALSE, nPcs = NULL, maxSteps = 100)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.pca_bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by Bayesian principal components analysis — impute.pca_bayes","text":"dataSet 2d dataset experimental values. reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure. nPcs integer specifying number principal components calculate. default set minimum number samples number proteins. maxSteps integer (default = 100) specifying maximum number estimation steps.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.pca_bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by Bayesian principal components analysis — impute.pca_bayes","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.pca_bayes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by Bayesian principal components analysis — impute.pca_bayes","text":"Oba S, Sato M, Takemasa , Monden M, Matsubara K, Ishii S (2003). “Bayesian Missing Value Estimation Method Gene Expression Profile Data.” Bioinformatics, 19(16), 2088–2096. doi:10.1093/bioinformatics/btg287 .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.pca_prob.html","id":null,"dir":"Reference","previous_headings":"","what":"Imputation by probabilistic principal components analysis — impute.pca_prob","title":"Imputation by probabilistic principal components analysis — impute.pca_prob","text":"Apply imputation dataset probabilistic principal components analysis (Stacklies et al. 2007) .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.pca_prob.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imputation by probabilistic principal components analysis — impute.pca_prob","text":"","code":"impute.pca_prob(   dataSet,   reportImputing = FALSE,   nPcs = NULL,   maxIterations = 1000,   seed = 362436069 )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.pca_prob.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imputation by probabilistic principal components analysis — impute.pca_prob","text":"dataSet 2d dataset experimental values. reportImputing boolean (default = FALSE) specifying whether provide shadow data frame imputed data labels, 1 indicates corresponding entries imputed, 0 indicates otherwise. Alters return structure. nPcs integer specifying number principal components calculate. default set minimum number samples number proteins. maxIterations integer (default = 1000) specifying maximum number allowed iterations. seed integer (default = 362436069) specifying seed used random number generator reproducibility.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.pca_prob.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imputation by probabilistic principal components analysis — impute.pca_prob","text":"reportImputing = FALSE, function returns imputed 2d dataframe. reportImputing = TRUE, function returns list imputed 2d dataframe shadow matrix showing proteins replicate imputed.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/impute.pca_prob.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Imputation by probabilistic principal components analysis — impute.pca_prob","text":"Stacklies W, Redestig H, Scholz M, Walther D, Selbig J (2007). “pcaMethods–Bioconductor Package Providing PCA Methods Incomplete Data.” Bioinformatics, 23(9), 1164–1167. doi:10.1093/bioinformatics/btm069 .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization of preprocessed data — normalize","title":"Normalization of preprocessed data — normalize","text":"Apply specified type normalization data set.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization of preprocessed data — normalize","text":"","code":"normalize(dataSet, applyto = \"sample\", normalizeType = \"quant\", plot = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization of preprocessed data — normalize","text":"dataSet 2d data set experimental values. applyto string (default = \"sample\") specifying target normalization. Options \"sample\" \"row\" (across rows), \"protein\" \"column\" (across columns). normalizeType string (default = \"quant\") specifying type normalization apply: \"auto\": Auto scaling (Jackson 1991) . \"level\": Level scaling. \"mean\": Mean centering. \"median\": Median centering. \"pareto\": Pareto scaling. \"quant\": Quantile normalization (Bolstad et al. 2003) . \"range\": Range scaling. \"vast\": Variable stability (VAST) scaling. (Keun et al. 2003) . \"none\": None. plot boolean (default = TRUE) specifying whether plot boxplot normalization.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalization of preprocessed data — normalize","text":"normalized 2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalization of preprocessed data — normalize","text":"Quantile normalization generally recommended. Mean median normalization going included popular previous methods. normalization recommended. Boxplots also generated normalization give visual indicator changes.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/normalize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normalization of preprocessed data — normalize","text":"Bolstad BM, Irizarry RA, Astrand M, Speed TP (2003). “Comparison Normalization Methods High Density Oligonucleotide Array Data Based Variance Bias.” Bioinformatics, 19(2), 185–193. doi:10.1093/bioinformatics/19.2.185 . Jackson JE (1991). User's Guide Principal Components. John Wiley \\& Sons, New York, NY, USA. ISBN 9780471622673. Keun HC, Ebbels TMD, Antti H, Bollard , Beckonert O, Holmes E, Lindon JC, Nicholson JK (2003). “Improved Analysis Multivariate Data Variable Stability Scaling: Application NMR-based Metabolic Profiling.” Analytica Chimica Acta, 490(1–2), 265–276. doi:10.1016/S0003-2670(03)00094-1 .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading, filtering and reformatting of MS DIA data from Spectronaut — preprocessing","title":"Loading, filtering and reformatting of MS DIA data from Spectronaut — preprocessing","text":"Read data file Spectronaut, apply filtering conditions, select columns necessary analysis, return reformatted data.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading, filtering and reformatting of MS DIA data from Spectronaut — preprocessing","text":"","code":"preprocessing(   fileName,   dataSet = NULL,   filterNaN = TRUE,   filterUnique = 2,   replaceBlank = TRUE,   saveRm = TRUE )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading, filtering and reformatting of MS DIA data from Spectronaut — preprocessing","text":"fileName name .csv file containing MS data (including path file, needed). dataSet raw data set, already loaded R. filterNaN boolean (default = TRUE) specifying whether observations including NaN omitted. filterUnique integer (default = 2) specifying many number unique peptides required include protein. replaceBlank boolean (default = TRUE) specifying whether proteins without names named accession numbers. saveRm boolean (default = TRUE) specifying whether save removed data current working directory.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading, filtering and reformatting of MS DIA data from Spectronaut — preprocessing","text":"2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loading, filtering and reformatting of MS DIA data from Spectronaut — preprocessing","text":"function executes following: Reads file. Applies applicable filters, necessary. Provides summary statistics histogram values reported data set. Selects columns contain necessary information analysis. Re-formats data present individual proteins columns group replicates protein. Stores data data.frame prints levels condition replicate user.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing_scaffold.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading and reformatting of MS data from Scaffold — preprocessing_scaffold","title":"Loading and reformatting of MS data from Scaffold — preprocessing_scaffold","text":"Read data file Scaffold, select columns necessary analysis, return reformatted data.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing_scaffold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading and reformatting of MS data from Scaffold — preprocessing_scaffold","text":"","code":"preprocessing_scaffold(fileName, dataSet = NULL, zeroNA = TRUE, oneNA = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing_scaffold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading and reformatting of MS data from Scaffold — preprocessing_scaffold","text":"fileName name .xls file containing MS data (including path file, needed). dataSet raw data set, already loaded R. zeroNA boolean (default = TRUE) specifying whether 0's converted NA's. oneNA boolean (default = TRUE) specifying whether 1's converted NA's.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing_scaffold.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading and reformatting of MS data from Scaffold — preprocessing_scaffold","text":"data contains columns Gene Ontology (GO) annotation terms, function returns list containing preprocessed 2d dataframe list GO terms. GO annotation columns present, function returns preprocessed 2d dataframe.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/preprocessing_scaffold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loading and reformatting of MS data from Scaffold — preprocessing_scaffold","text":"function executes following: Reads file. Provides summary statistics histogram values reported data set. Selects columns contain necessary information analysis. Re-formats data present individual proteins columns group replicates protein. Stores data data.frame prints levels condition replicate user.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/pullProteinPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Compiling data on a single protein from each step in the process — pullProteinPath","title":"Compiling data on a single protein from each step in the process — pullProteinPath","text":"Summarize steps performed data one protein.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/pullProteinPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compiling data on a single protein from each step in the process — pullProteinPath","text":"","code":"pullProteinPath(   listName = NULL,   regexName = NULL,   dataSetList,   by = \"PG.ProteinNames\",   proteinInformation = \"preprocess_protein_information.csv\" )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/pullProteinPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compiling data on a single protein from each step in the process — pullProteinPath","text":"listName character vector identifying proteins interest. regexName character vector specifying proteins regular expression pattern matching. dataSetList list data frames, order dictates order presentation. character string specifying information listName /regexName applied, allowable options: Spectronaut: \"PG.Genes\", \"PG.ProteinAccessions\", \"PG.ProteinDescriptions\", \"PG.ProteinNames\". Scaffold: \"ProteinDescriptions\", \"AccessionNumber\", \"AlternateID\". proteinInformation name .csv file containing protein information data (including path file, needed). file include following columns: Spectronaut: \"PG.Genes\", \"PG.ProteinAccessions\", \"PG.ProteinDescriptions\", \"PG.ProteinNames\". Scaffold: \"ProteinDescriptions\", \"AccessionNumber\", \"AlternateID\". file automatically generated function preprocessing preprocessing_scaffold.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/pullProteinPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compiling data on a single protein from each step in the process — pullProteinPath","text":"2d dataframe, protein data step present dataSetList.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/sortcondition.html","id":null,"dir":"Reference","previous_headings":"","what":"Creating a keyed list of conditions to the list of proteins that are present — sortcondition","title":"Creating a keyed list of conditions to the list of proteins that are present — sortcondition","text":"Create keyed dictionary, every unique experimental condition label list every protein value condition.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/sortcondition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creating a keyed list of conditions to the list of proteins that are present — sortcondition","text":"","code":"sortcondition(dataSet)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/sortcondition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creating a keyed list of conditions to the list of proteins that are present — sortcondition","text":"dataSet 2d data set experimental values.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/sortcondition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creating a keyed list of conditions to the list of proteins that are present — sortcondition","text":"list lists.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize protein intensities across conditions — summarize","title":"Summarize protein intensities across conditions — summarize","text":"Calculate mean, standard deviation, replicate count protein across every condition.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize protein intensities across conditions — summarize","text":"","code":"summarize(dataSet, saveSumm = TRUE)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize protein intensities across conditions — summarize","text":"dataSet data frame containing data signals labels. saveSumm boolean (default = TRUE) specifying whether save summary statistics current working directory.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/summarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize protein intensities across conditions — summarize","text":"2d summarized data frame.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/summarize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize protein intensities across conditions — summarize","text":"column 'Stat' generated data.frame includes following statistics: n: Number. mean: Mean. sd: Standard deviation. median: Median. trimmed: Trimmed mean trim 0.1. mad: Median absolute deviation (median). min: Minimum. max: Maximum. range: difference maximum minimum value. skew: Skewness. kurtosis: Kurtosis. se: Standard error.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transformation — transform","title":"Transformation — transform","text":"Apply transformation data stabilize variance.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transformation — transform","text":"","code":"transform(dataSet, method = \"log\", logFold = 2, root = 2)"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transformation — transform","text":"dataSet data frame containing data signals. method string (default = \"log\") specifying method used transformation: \"log\": Logarithm transformation. \"root\": Root transformation. logFold integer (default = 2) specifying base log transformation method = \"log\". root integer (default = 2) specifying degree root root transformation method = \"root\". example, set 2 square root 3 cube root.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transformation — transform","text":"transformed data.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/transform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transformation — transform","text":"function executes following: Plots mean-variance relationship. Transforms data. Plots mean-variance relationship comparison.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA.html","id":null,"dir":"Reference","previous_headings":"","what":"Trimming down a protein FASTA file to certain proteins — trimFASTA","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA","text":"Trim FASTA file contain proteins present associated Spectronaut report file.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA","text":"","code":"trimFASTA(   FASTAFileName,   reportFileName,   outputFileName = \"trimFASTA_output.txt\",   by = \"PG.ProteinNames\",   selectString = \"*BOVIN\" )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA","text":"FASTAFileName character string specifying name input FASTA .txt file. reportFileName character string specifying name Spectronaut report .csv file. outputFileName character string (default = \"trimFASTA_output.txt\") specifying name output file. character string (default = \"PG.ProteinNames\") specifying identifier (column name) used selection report file. selectString character string specifying regular expression search .","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA","text":"FASTA file specified proteins present.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/trimFASTA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trimming down a protein FASTA file to certain proteins — trimFASTA","text":"Depending size FASTA file, function may run slowly take several minutes. FASTA file must .txt format; formats work.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/visualize.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating visualizations for MS Data — visualize","title":"Generating visualizations for MS Data — visualize","text":"Create specific graphics illustrate results data analysis function.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/visualize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating visualizations for MS Data — visualize","text":"","code":"visualize(   dataSet,   graphType = \"volcano\",   pkg = \"pheatmap\",   cluster_cols = TRUE,   cluster_rows = FALSE,   show_colnames = TRUE,   show_rownames = TRUE,   M.thres = 1,   addlabels = TRUE,   choice = \"variance\",   ncp = 10,   addEllipses = TRUE,   ellipse.level = 0.95,   label = \"all\",   show_percentage = TRUE,   fill_color = c(\"blue\", \"yellow\", \"green\", \"red\"),   saveVenn = TRUE,   proteinInformation = \"preprocess_protein_information.csv\",   P.thres = 0.05,   F.thres = 1 )"},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/visualize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating visualizations for MS Data — visualize","text":"dataSet 2D data frame corresponds output function analyze() name. graphType string indicating graph type. Current options : \"heatmap\" \"MA\" \"normalize\" \"PCA_biplot\" \"PCA_ind\" \"PCA_scree\" \"PCA_var\" \"t-test\" \"Upset\" \"Venn\" \"volcano\" pkg string specifying source package used plot heatmap. Two options: \"pheatmap\" \"ggplot2\". argument works graphType = \"heatmap\". cluster_cols boolean (default = TRUE) determining rows clustered hclust object. argument works graphType = \"heatmap\" pkg = \"pheatmap\". cluster_rows boolean (default = FALSE) determining columns clustered hclust object. argument works graphType = \"heatmap\" pkg = \"pheatmap\". show_colnames boolean (default = TRUE) specifying column names shown. argument works graphType = \"heatmap\" pkg = \"pheatmap\". show_rownames boolean (default = TRUE) specifying row names shown. argument works graphType = \"heatmap\" pkg = \"pheatmap\". M.thres absolute threshold value M (log fold-change) (default = 1) used plot two vertical lines (-M.thres M.thres) MA plot graphType = \"MA\". addlabels boolean (default = TRUE) specifying whether elements labeled. graphType = \"PCA_scree\", specifies whether labels added top bars points show information retained dimension. graphType = \"PCA_ind\", specifies whether active individuals labeled. graphType = \"PCA_var\", specifies whether active variables labeled. choice text (default = \"variance\") specifying PCA data plotted scree plot graphType = \"PCA_scree\". Allowed values \"variance\" \"eigenvalue\". ncp numeric value (default = 10) specifying number dimensions shown graphType = \"PCA_scree\". addEllipses boolean (default = TRUE) specifying whether draw ellipses around individuals graphType = \"PCA_ind\" graphType = \"PCA_biplot\". ellipse.level numeric value (default = 0.95) specifying size concentration ellipse normal probability graphType = \"PCA_ind\" graphType = \"PCA_biplot\". label text (default = \"\") specifying elements labelled graphType = \"PCA_biplot\". Allowed values: \"\": Label active individuals active variables. \"ind\": Label active individuals. \"var\": Label active variables. \"none\": labels. show_percentage boolean (default = TRUE) specifying whether show percentage set graphType = \"Venn\". fill_color text (default = c(\"blue\", \"yellow\", \"green\", \"red\")) specifying colors fill circles graphType = \"Venn\". saveVenn boolean (default = TRUE) specifying whether save data, logical columns representing sets, current working directory graphType = \"Venn\". proteinInformation name .csv file containing protein information data (including path file, needed). file automatically generated function preprocessing. P.thres threshold value P-value (default = 0.05) used plot horizontal line (-log10(P.thres)) volcano plot graphType = \"volcano\". F.thres absolute threshold value fold change (default = 1) used plot two vertical lines (-F.thres F.thres) volcano plot graphType = \"volcano\".","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/visualize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating visualizations for MS Data — visualize","text":"object class ggplot.","code":""},{"path":"https://uconn-scs.github.io/msDiaLogue/reference/visualize.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generating visualizations for MS Data — visualize","text":"function visualize() designed work directly output function analyze(). Please sure arguments graphType testType match.","code":""}]
